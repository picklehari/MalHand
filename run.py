# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sh19-8u10VuD5PIWtL0x4YBZeZntd0t2

# Training a Neural Net Model for Alphabets
"""

# Commented out IPython magic to ensure Python compatibility.
# %reload_ext autoreload
# %autoreload 2
# %matplotlib inline

"""Importing Libraries. Inital try with fastai libraries."""

from fastai import *
from fastai.vision import *
from fastai.metrics import error_rate
from os import listdir
# from google.colab import drive
# drive.mount("/content/gdrive")

def set_tag():

    alphabet = "്  ാ  ി  ീ  ു  ൂ  െ ൃ  െ  ൌ  ം അ ആ ഇ ഉ ഋ എ ഏ ഒ ക ഖ ഗ ഘ ങ ച ഛ ജ ഝ ഞ ട ഠ ഢ ഡ ണ ത ഫ ദ ധ ന പ ഫ ബ ഭ മ യ ര റ ല ള ഴ വ ശ ഷ സ ഹ ൺ ൻ ർ ൽ ൾ ക്ക ക്ഷ ങ്ക ങ്ങ ച്ച ഞ്ച ഞ്ഞ ട്ട ണ്ട ണ്ണ ത്ത ദ്ധ ന്ത ന്ദ ന്ന പ്പ മ്പ മ്മ യ്യ ല്ല ള്ള  ്യ   ്ര  ്വ"
    alphabet = alphabet.split(" ")
    alphabets = []
    for x in alphabet:
        if x!= '':
            alphabets.append(x)
    return alphabets
#print(filenames)

    # data = ImageDataBunch.from_name_re(train_path,train_fnames,pat,size=1024,bs=16).normalize(imagenet_stats)
    # tfms = get_transforms(do_flip=False)
    # data = ImageDataBunch.from_folder(path,ds_tfms=tfms,size=1024,bs=16)
    # learn = cnn_learner(data, models.resnet34, metrics=error_rate)
    # learn.fit_one_cycle(2)
def predict_alphabets(image_path):    
    defaults.device = torch.device("cpu")
    learn = load_learner(path= '.',file="MalHand.pkl")
    image_path = Path(image_path)
# y = []
# for i in filenames:
#     img = open_image(image_path/i)
#     pred_class,pred_idx,outputs = learn.predict(img)
#     index = int(str(pred_class)) - 1
#     print([i,pred_class])
#     y.append({i:alphabets[index]})
    img = open_image(image_path)
    alphabets = set_tag() 
    pred_class,pred_idx,outputs = learn.predict(img)
    index = int(str(pred_class)) - 1
    return alphabets[index]
# a = open('output.txt',"w")
# a.writelines(str(y))

print(predict_alphabets("bw/768.png"))